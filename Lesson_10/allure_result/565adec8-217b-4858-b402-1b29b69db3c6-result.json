{"name": "Получение списка сотрудников", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2 == 0\n +  where 2 = len({'message': 'Internal server error', 'statusCode': 500})\n +  and   0 = len([])", "trace": "@allure.epic(\"X-clients\")\n    @allure.title(\"Получение списка сотрудников\")\n    @allure.description(\"Получение списка сотрудников\")\n    @allure.feature(\"Тест 4\")\n    @allure.severity(severity_level='normal')\n    def test_get_company_workers():\n        with allure.step(\"DB: Создаем компанию и получаем еe ID\"):\n            comp_id = db.create_company('Farit & Co', 'Company for tests')\n    \n            #Данные нового сотрудника\n        new_worker = {\n            \"first_name\": \"Sfrt\",\n            \"last_name\": \"Sham\",\n            \"middle_name\": \"\",\n            \"company_id\": comp_id,\n            \"email\": \"sfrt@mail.com\",\n            \"avatar_url\": \"\",\n            \"phone\": \"89182793824\",\n            \"birthdate\": \"1954/05/31\",\n            \"is_active\": True\n        }\n    \n        with allure.step(\"DB: Создаем нового сотрудника и получаем его ID\"):\n            empl_id = db.create_employee(new_worker)\n    \n        with allure.step(\"DB: Получим список сотрудников компании c id = {comp_id} запросом в БД\"):\n            db_list = db.get_employees_list(comp_id)\n    \n        with allure.step(\"API: Получим список сотрудников компании c id = {comp_id} запросом через API\"):\n            api_list = api.get_workers_list(comp_id)\n    \n        with allure.step(\"Удаляем введенного сотрудникаc id = {empl_id}\"):\n            db.delete_employee(empl_id)\n    \n        with allure.step(\"Удаляем введенную компанию c id = {comp_id}\"):\n            db.delete_company(comp_id)\n    \n        with allure.step(\"Сравниваем результаты\"):\n>           assert len(api_list) == len(db_list)\nE           AssertionError: assert 2 == 0\nE            +  where 2 = len({'message': 'Internal server error', 'statusCode': 500})\nE            +  and   0 = len([])\n\ntests/test_x_clients.py:195: AssertionError"}, "description": "Получение списка сотрудников", "steps": [{"name": "DB: Создаем компанию и получаем еe ID", "status": "passed", "steps": [{"name": "Создание новой компании", "status": "passed", "parameters": [{"name": "comp_name", "value": "'Farit & Co'"}, {"name": "comp_descr", "value": "'Company for tests'"}], "start": 1723559532594, "stop": 1723559533435}], "start": 1723559532594, "stop": 1723559533435}, {"name": "DB: Создаем нового сотрудника и получаем его ID", "status": "passed", "steps": [{"name": "Создание новой сотрудника", "status": "passed", "parameters": [{"name": "new_worker", "value": "{'first_name': 'Sfrt', 'last_name': 'Sham', 'middle_name': '', 'company_id': None, 'email': 'sfrt@mail.com', 'avatar_url': '', 'phone': '89182793824', 'birthdate': '1954/05/31', 'is_active': True}"}], "start": 1723559533436, "stop": 1723559534249}], "start": 1723559533435, "stop": 1723559534249}, {"name": "DB: Получим список сотрудников компании c id = {comp_id} запросом в БД", "status": "passed", "steps": [{"name": "Получение списка сотрудников", "status": "passed", "parameters": [{"name": "comp_id", "value": "None"}], "start": 1723559534249, "stop": 1723559535060}], "start": 1723559534249, "stop": 1723559535060}, {"name": "API: Получим список сотрудников компании c id = {comp_id} запросом через API", "status": "passed", "steps": [{"name": "Получим список сотрудников компании c id = None", "status": "passed", "parameters": [{"name": "company_id", "value": "None"}], "start": 1723559535061, "stop": 1723559535365}], "start": 1723559535061, "stop": 1723559535366}, {"name": "Удаляем введенного сотрудникаc id = {empl_id}", "status": "passed", "steps": [{"name": "Удаление сотрудника c ID = None", "status": "passed", "parameters": [{"name": "empl_id", "value": "None"}], "start": 1723559535366, "stop": 1723559536176}], "start": 1723559535366, "stop": 1723559536176}, {"name": "Удаляем введенную компанию c id = {comp_id}", "status": "passed", "steps": [{"name": "Удаление компании", "status": "passed", "parameters": [{"name": "comp_id", "value": "None"}], "start": 1723559536176, "stop": 1723559536987}], "start": 1723559536176, "stop": 1723559536987}, {"name": "Сравниваем результаты", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2 == 0\n +  where 2 = len({'message': 'Internal server error', 'statusCode': 500})\n +  and   0 = len([])\n", "trace": "  File \"/home/sfrt/SkyPro_Projects/python_automation/Lesson_10/tests/test_x_clients.py\", line 195, in test_get_company_workers\n    assert len(api_list) == len(db_list)\n"}, "start": 1723559536987, "stop": 1723559536987}], "attachments": [{"name": "stdout", "source": "f3c79ff9-b4c4-4402-9300-d590d60452f0-attachment.txt", "type": "text/plain"}], "start": 1723559532594, "stop": 1723559536988, "uuid": "1b72c86e-c0da-46e4-9df0-c7d763debe0a", "historyId": "9c5e8b5e522171930ab43aed44ac5838", "testCaseId": "9c5e8b5e522171930ab43aed44ac5838", "fullName": "tests.test_x_clients#test_get_company_workers", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Тест 4"}, {"name": "epic", "value": "X-clients"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_x_clients"}, {"name": "host", "value": "MyPC"}, {"name": "thread", "value": "95678-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_x_clients"}]}