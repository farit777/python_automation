{"name": "Получение сотрудника по ID", "status": "broken", "statusDetails": {"message": "KeyError: 'firstName'", "trace": "@allure.epic(\"X-clients\")\n    @allure.title(\"Получение сотрудника по ID\")\n    @allure.description(\"Получения сотрудника по ID\")\n    @allure.feature(\"Тест 3\")\n    @allure.severity(severity_level='normal')\n    def test_get_worker_by_id():\n        with allure.step(\"DB: Создаем компанию и получаем еe ID\"):\n            comp_id = db.create_company('Farit & Co', 'Company for tests')\n    \n        #Данные нового сотрудника\n        new_worker = {\n            \"first_name\": \"Sfrt\",\n            \"last_name\": \"Sham\",\n            \"middle_name\": \"\",\n            \"company_id\": comp_id,\n            \"email\": \"sfrt@mail.com\",\n            \"avatar_url\": \"\",\n            \"phone\": \"89182793824\",\n            \"birthdate\": \"1954/05/31\",\n            \"is_active\": True\n        }\n    \n        with allure.step(\"DB: Создаем нового сотрудника и получаем его ID\"):\n            empl_id = db.create_employee(new_worker)\n    \n        with allure.step(\"DB: Получим данные сотрудника c id = {empl_id} из БД\"):\n            worker_db = db.get_employee_by_id(empl_id)\n    \n        with allure.step(\"API: Получаем сотрудника c id = {empl_id} через запрос по API\"):\n            worker_api = api.get_worker(empl_id)\n    \n        with allure.step(\"Удаляем введенного сотрудника c id = {empl_id}\"):\n            db.delete_employee(empl_id)\n    \n        with allure.step(\"Удаляем введенную компанию c id = {comp_id}\"):\n            db.delete_company(comp_id)\n    \n        with allure.step(\"Сравниваем имена, фамилии и id сотрудников\"):\n>           assert worker_api[\"firstName\"] == worker_db[\"first_name\"]\nE           KeyError: 'firstName'\n\ntests/test_x_clients.py:153: KeyError"}, "description": "Получения сотрудника по ID", "steps": [{"name": "DB: Создаем компанию и получаем еe ID", "status": "passed", "steps": [{"name": "Создание новой компании", "status": "passed", "parameters": [{"name": "comp_name", "value": "'Farit & Co'"}, {"name": "comp_descr", "value": "'Company for tests'"}], "start": 1723559528143, "stop": 1723559528954}], "start": 1723559528143, "stop": 1723559528954}, {"name": "DB: Создаем нового сотрудника и получаем его ID", "status": "passed", "steps": [{"name": "Создание новой сотрудника", "status": "passed", "parameters": [{"name": "new_worker", "value": "{'first_name': 'Sfrt', 'last_name': 'Sham', 'middle_name': '', 'company_id': None, 'email': 'sfrt@mail.com', 'avatar_url': '', 'phone': '89182793824', 'birthdate': '1954/05/31', 'is_active': True}"}], "start": 1723559528955, "stop": 1723559529849}], "start": 1723559528954, "stop": 1723559529849}, {"name": "DB: Получим данные сотрудника c id = {empl_id} из БД", "status": "passed", "steps": [{"name": "Получение сотрудника по ID=None", "status": "passed", "parameters": [{"name": "empl_id", "value": "None"}], "start": 1723559529849, "stop": 1723559530702}], "start": 1723559529849, "stop": 1723559530702}, {"name": "API: Получаем сотрудника c id = {empl_id} через запрос по API", "status": "passed", "steps": [{"name": "Получим сотрудника по ID = None", "status": "passed", "parameters": [{"name": "id", "value": "None"}], "start": 1723559530702, "stop": 1723559530960}], "start": 1723559530702, "stop": 1723559530960}, {"name": "Удаляем введенного сотрудника c id = {empl_id}", "status": "passed", "steps": [{"name": "Удаление сотрудника c ID = None", "status": "passed", "parameters": [{"name": "empl_id", "value": "None"}], "start": 1723559530960, "stop": 1723559531770}], "start": 1723559530960, "stop": 1723559531770}, {"name": "Удаляем введенную компанию c id = {comp_id}", "status": "passed", "steps": [{"name": "Удаление компании", "status": "passed", "parameters": [{"name": "comp_id", "value": "None"}], "start": 1723559531770, "stop": 1723559532584}], "start": 1723559531770, "stop": 1723559532584}, {"name": "Сравниваем имена, фамилии и id сотрудников", "status": "broken", "statusDetails": {"message": "KeyError: 'firstName'\n", "trace": "  File \"/home/sfrt/SkyPro_Projects/python_automation/Lesson_10/tests/test_x_clients.py\", line 153, in test_get_worker_by_id\n    assert worker_api[\"firstName\"] == worker_db[\"first_name\"]\n"}, "start": 1723559532584, "stop": 1723559532584}], "attachments": [{"name": "stdout", "source": "3ae97b5c-d288-407c-bae7-ec173db9aab8-attachment.txt", "type": "text/plain"}], "start": 1723559528143, "stop": 1723559532585, "uuid": "310fd072-d25a-407b-9e9a-b3b941ccffea", "historyId": "fdfa4766864f8228ef3d6e56a3f3826e", "testCaseId": "fdfa4766864f8228ef3d6e56a3f3826e", "fullName": "tests.test_x_clients#test_get_worker_by_id", "labels": [{"name": "severity", "value": "normal"}, {"name": "epic", "value": "X-clients"}, {"name": "feature", "value": "Тест 3"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_x_clients"}, {"name": "host", "value": "MyPC"}, {"name": "thread", "value": "95678-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_x_clients"}]}