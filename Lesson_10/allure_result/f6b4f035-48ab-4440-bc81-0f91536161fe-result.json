{"name": "Добавление нового сотрудника", "status": "broken", "statusDetails": {"message": "KeyError: 'firstName'", "trace": "@allure.epic(\"X-clients\")\n    @allure.title(\"Добавление нового сотрудника\")\n    @allure.description(\"Словарь данных и добавление нового сотрудника\")\n    @allure.feature(\"Тест 1\")\n    @allure.severity(severity_level='normal')\n    def test_add_new_worker():\n        with allure.step(\"Создаем компанию и получаем его ID\"):\n            comp_id = db.create_company('Farit & Co', 'Company for tests')\n    \n        #Данные нового сотрудника\n        new_worker = {\n            \"first_name\": \"Sfrt\",\n            \"last_name\": \"Sham\",\n            \"middle_name\": \"\",\n            \"company_id\": comp_id,\n            \"email\": \"sfrt@mail.com\",\n            \"avatar_url\": \"\",\n            \"phone\": \"89182793824\",\n            \"birthdate\": \"1954/05/31\",\n            \"is_active\": True\n        }\n    \n        with allure.step(\"DB: Создаем нового сотрудника и получаем его ID\"):\n            empl_id = db.create_employee(new_worker)\n    \n        with allure.step(\"API: Получаем сотрудника c id = {empl_id} через запрос по API\"):\n            api_worker = api.get_worker(empl_id)\n    \n        with allure.step(\"BD: Получим сотрудника c id = {empl_id} через запрос в БД\"):\n            db_worker = db.get_employee_by_id(empl_id)\n    \n        with allure.step(\"Удаляем введенного сотрудника c id = {empl_id}\"):\n            db.delete_employee(empl_id)\n    \n        with allure.step(\"Удаляем введенную компанию c id = {comp_id}\"):\n            db.delete_company(comp_id)\n    \n        with allure.step(\"Сравниваем имя, фамилию  и id\"):\n>           assert api_worker[\"firstName\"] == db_worker[\"first_name\"]\nE           KeyError: 'firstName'\n\ntests/test_x_clients.py:50: KeyError"}, "description": "Словарь данных и добавление нового сотрудника", "steps": [{"name": "Создаем компанию и получаем его ID", "status": "passed", "steps": [{"name": "Создание новой компании", "status": "passed", "parameters": [{"name": "comp_name", "value": "'Farit & Co'"}, {"name": "comp_descr", "value": "'Company for tests'"}], "start": 1723559517417, "stop": 1723559518358}], "start": 1723559517417, "stop": 1723559518358}, {"name": "DB: Создаем нового сотрудника и получаем его ID", "status": "passed", "steps": [{"name": "Создание новой сотрудника", "status": "passed", "parameters": [{"name": "new_worker", "value": "{'first_name': 'Sfrt', 'last_name': 'Sham', 'middle_name': '', 'company_id': None, 'email': 'sfrt@mail.com', 'avatar_url': '', 'phone': '89182793824', 'birthdate': '1954/05/31', 'is_active': True}"}], "start": 1723559518358, "stop": 1723559519342}], "start": 1723559518358, "stop": 1723559519342}, {"name": "API: Получаем сотрудника c id = {empl_id} через запрос по API", "status": "passed", "steps": [{"name": "Получим сотрудника по ID = None", "status": "passed", "parameters": [{"name": "id", "value": "None"}], "start": 1723559519343, "stop": 1723559519977}], "start": 1723559519342, "stop": 1723559519977}, {"name": "BD: Получим сотрудника c id = {empl_id} через запрос в БД", "status": "passed", "steps": [{"name": "Получение сотрудника по ID=None", "status": "passed", "parameters": [{"name": "empl_id", "value": "None"}], "start": 1723559519977, "stop": 1723559520874}], "start": 1723559519977, "stop": 1723559520874}, {"name": "Удаляем введенного сотрудника c id = {empl_id}", "status": "passed", "steps": [{"name": "Удаление сотрудника c ID = None", "status": "passed", "parameters": [{"name": "empl_id", "value": "None"}], "start": 1723559520875, "stop": 1723559521894}], "start": 1723559520874, "stop": 1723559521894}, {"name": "Удаляем введенную компанию c id = {comp_id}", "status": "passed", "steps": [{"name": "Удаление компании", "status": "passed", "parameters": [{"name": "comp_id", "value": "None"}], "start": 1723559521895, "stop": 1723559522735}], "start": 1723559521895, "stop": 1723559522736}, {"name": "Сравниваем имя, фамилию  и id", "status": "broken", "statusDetails": {"message": "KeyError: 'firstName'\n", "trace": "  File \"/home/sfrt/SkyPro_Projects/python_automation/Lesson_10/tests/test_x_clients.py\", line 50, in test_add_new_worker\n    assert api_worker[\"firstName\"] == db_worker[\"first_name\"]\n"}, "start": 1723559522736, "stop": 1723559522736}], "attachments": [{"name": "stdout", "source": "b3ff0d7f-26b5-4184-9c9f-6a0b1c8e00b2-attachment.txt", "type": "text/plain"}], "start": 1723559517417, "stop": 1723559522737, "uuid": "5a47a98f-72f2-4ac1-ab8b-f797c9aa8329", "historyId": "307c36c4f1916b746faa840dac6f6962", "testCaseId": "307c36c4f1916b746faa840dac6f6962", "fullName": "tests.test_x_clients#test_add_new_worker", "labels": [{"name": "epic", "value": "X-clients"}, {"name": "feature", "value": "Тест 1"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_x_clients"}, {"name": "host", "value": "MyPC"}, {"name": "thread", "value": "95678-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_x_clients"}]}